<?php
/**
 * Created by PhpStorm.
 * User: yifanfengshun
 * Date: 2016/11/9
 * Time: 上午11:29
 */

namespace Home\Controller;

use Home\Model\UserModel as User;
use Home\Model\UserBankModel as UserBank;
use Home\Model\TikuanConfigModel as TikuanConfig;
use Home\Model\UserRechargeCountModel as UserRechargeCount;
use Home\Model\AccordingTimeModel as AccordingTime;
use PhpAmqpLib\Connection\AMQPConnection;
use PhpAmqpLib\Message\AMQPMessage;
use Home\Model\UserQuestionModel as UserQuestion;
class WithDrawController extends CommonController
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $UserBank = new UserBank();
        if(empty($UserBank->checkUserBank())){
            redirect('/User/index');
        }

    }

    public function index()
    {
        $this->menu = "manager";
        $this->managermenu = 'finance';
        $User = new User();
        $this->money = $User->getUserAccount();
        $UserBank = new UserBank();
        $this->bankList = $UserBank->checkUserBank();
        $TikuanConfig = new TikuanConfig();
        $this->isStatus = $TikuanConfig->getStatus();
        $this->starttime = $TikuanConfig->getStarttime();
        $this->endtime = $TikuanConfig->getEndtime();
        $this->WITHDRAWMIN = $TikuanConfig->getMinmoney();
        $this->WITHDRAWMAX = $TikuanConfig->getMaxmoney();
        $this->appKey = md5(session("SESSION_NAME").time());
        session("WITHDRAWAPPKEY",$this->appKey);
        $this->display();
    }

    /**
     * 查看银行卡绑定的时间
     */
    public function getBankBindTime()
    {
        $bankid = I("post.bankid");
        $UserBank = new UserBank();
        $UserBank->data = array("bankid"=>$bankid);
        $res = $UserBank->bindBankInfo();
        $ptime = $res["ptime"];
        $withdrawtime = C("WITHDRAWTIME");
        if(($ptime+$withdrawtime*3600)>time())
        {
            $endtime = $ptime+$withdrawtime*3600-time();
            echo json_encode(array("flag"=>true,"time"=>$endtime));
        }
        else
        {
            echo json_encode(array('flag'=>false,"time"=>0));
        }
    }

    /**
     * 提款验证码
     */
    public function creat_verify()
    {
        $config = array(
            'fontSize' => 12, // 验证码字体大小
            'length' => 4, // 验证码位数
            'useNoise' => false, // 关闭验证码杂点
            'reset' => false, // 验证成功后是否重置
            'useCurve' => true,
            'useNoise' => false,
            'useImgBg' => false,
            'fontttf' => '5.ttf',
            'imageH' => '25',
            'imageW' => '90'
        );
        $verify = new \Think\Verify($config);
        $verify->codeSet = '0123456789';
        $verify->entry('withdraw');
    }

    /**
     *提交提款申请
     */
    public function deposit()
    {
        if(!IS_POST) exit();
        $TikuanConfig = new TikuanConfig();
        $User = new User();
        if(!$TikuanConfig->getStatus()) exit();
        $bankVal = I("post.bankVal");
        $money = I("post.money");
        $curpassword = I("post.curpassword");
        $appkeyVal = I("post.appkeyVal");
        $answer = I("post.answer");
        //$tel = I("post.tel");
        //$vcode = I("post.vcode");

        $min_money = $TikuanConfig->getMinmoney();
        $max_money = $TikuanConfig->getMaxmoney();
        $starttime = $TikuanConfig->getStarttime();
        $endtime = $TikuanConfig->getEndtime();
        $uid = session("SESSION_ID");
        $nowtime = time();
        $newAppkey = md5(session("SESSION_NAME").time());



        // 验证今日提款次数
        $todaywithdrawtime = mktime(0,0,0,date('m'),date('d'),date('Y'));
        $count = M("user_draw")->where("userid=".$uid." and dateline>=".$todaywithdrawtime." and state!=2")->count();
        // 提款次数限制
        $WITHDRAWCOUNT = C("WITHDRAWCOUNT");
        // 会员等级
        $level = M("user")->where(array("id"=>$uid))->getField("level");
        $withdrawcount = $WITHDRAWCOUNT[$level];
        if($level!=9)
        {
            if($count>=$withdrawcount)
            {
                $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'今日提款次数已达到上限');
                session("WITHDRAWAPPKEY",$newAppkey);
                echo json_encode($output);
                exit();
            }
        }
        // 验证密保问题答案
        // 获取用户的密保问题
        $UserQuestion = new UserQuestion();
        $UserQuestion->userid = session("SESSION_ID");
        $userQuestion = M("user_question");
        $bindanswer = $userQuestion->where(array("userid"=>session("SESSION_ID")))->getField('answer');
        if($bindanswer!=$answer)
        {
            $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'密保问题答案错误');
            session("WITHDRAWAPPKEY",$newAppkey);
            echo json_encode($output);
            exit();
        }

        // 验证验证码是否正确
        // $key = md5("WithDrawVcode".session("SESSION_NAME"));
        // if(session($key)!=rtrim($vcode))
        // {
        //     $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'验证码不正确');
        //     session("WITHDRAWAPPKEY",$newAppkey);
        //     echo json_encode($output);
        //     exit();
        // }
        // session($key,null);
        if($appkeyVal!=session("WITHDRAWAPPKEY") || empty($bankVal) || empty($money) || empty($curpassword) || empty($answer))
        {
            $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'提款失败');
            session("WITHDRAWAPPKEY",$newAppkey);
            echo json_encode($output);
            exit();
        }
        else
        {
            $UserBank = new UserBank();
            $UserBank->data = array("bankid"=>$bankVal);
            $bankInfo = $UserBank->bindBankInfo();
            if(empty($bankInfo))
            {
                $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'银行卡信息错误');
                session("WITHDRAWAPPKEY",$newAppkey);
                echo json_encode($output);
                exit();
            }
            else
            {
                $isValidateTime = false;
                $ptime = $bankInfo['ptime'];
                $btime = C("WITHDRAWTIME")*3600+$ptime;
                if($btime>time() && $isValidateTime==true)
                {
                    $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'银行卡绑定'.C("WITHDRAWTIME")."小时后才能提款");
                    session("WITHDRAWAPPKEY",$newAppkey);
                    echo json_encode($output);
                    exit();
                }
                else
                {
                    if(strpos($money,".")!==false){
                        $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'提款金额需为整数');
                        session("WITHDRAWAPPKEY",$newAppkey);
                        echo json_encode($output);
                        exit();
                    }
                    if(bccomp($money,$min_money,3)==-1 || bccomp($money,$max_money,3)==1){
                        $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'提款金额区间'.$min_money."元-".$max_money."元");
                        session("WITHDRAWAPPKEY",$newAppkey);
                        echo json_encode($output);
                        exit();
                    }
                    $stime1 = mktime($starttime,0,0,date("m"),date("d"),date("Y"));
                    $etime1 = mktime(23,59,59,date("m"),date("d"),date("Y"));
                    $stime2 = mktime(0,0,0,date("m"),date("d"),date("Y"));
                    $etime2 = mktime($endtime,0,0,date("m"),date("d"),date("Y"));
                    if(($nowtime>=$stime1 && $nowtime<=$etime1) || ($nowtime>=$stime2 && $nowtime<=$etime2))
                    {
                        $account = $User->getUserAccount();
                        $accountarr=explode("-",$account);
                        if(bccomp($money,$accountarr[0],4)==1)
                        {
                            $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'账户余额不足');
                            session("WITHDRAWAPPKEY",$newAppkey);
                            echo json_encode($output);
                            exit();
                        }
                        else
                        {
                            //判断是否达到提款要求
                            $user_recharge_count = M("user_recharge_count");
                            $nowTime = time();
                            $today0Time = strtotime(date("Y-m-d H:i:s", mktime(0, 0, 0, date("m") , date("d") , date("Y"))));
                            $today3Time = strtotime(date("Y-m-d H:i:s", mktime(03, 0, 0, date("m") , date("d") , date("Y"))));
                            //如果是 那么统计时间是前一天的03：00：00 到 今天的 02：59：59
                            if ($nowTime >= $today0Time && $nowTime < $today3Time) {
                                $accordStartTime = strtotime(date("Y-m-d H:i:s", mktime(03, 0, 0, date("m") , date("d") - 1, date("Y"))));
                                $accordEndTime = strtotime(date("Y-m-d H:i:s", mktime(03, 0, 0, date("m") , date("d"), date("Y"))));
                            } else {
                                $accordStartTime = strtotime(date("Y-m-d H:i:s", mktime(03, 0, 0, date("m") , date("d") , date("Y"))));
                                $accordEndTime = strtotime(date("Y-m-d H:i:s", mktime(03, 0, 0, date("m") , date("d")+1, date("Y"))));
                            }
                            //查询当天总的充值的30%
                            $total_liushui_res = $user_recharge_count->field("consume")->where("userid=".session("SESSION_ID")." AND type='充值' AND time>=".$accordStartTime." and time<=".$accordEndTime)->select();
                            $total_liushui = 0;
                            foreach($total_liushui_res as $value){
                                $total_liushui = $total_liushui+$value["consume"];
                            }

                            //查询最后一笔提现时间
                            $tixianres = $user_recharge_count->where(array("userid"=>session("SESSION_ID"),"type"=>"提款"))->order("id DESC")->field("time")->find();
                            $lastTixianTime = $tixianres["time"];
                            $res = $user_recharge_count->where(array("userid"=>session("SESSION_ID"),"type"=>"充值","time"=>array("egt",$lastTixianTime)))->order("id DESC")->limit(5)->select();
                            
                            $accordingTimeModel = M("according_time");
                            $_map["userid"] = session("SESSION_ID");
                            $_map["_string"] = "accordTime=".$accordStartTime;

                            $touzhuAmount = $accordingTimeModel->where($_map)->sum("touzhuAmount");

                            $bonus_level = M("user_bonus")->where(array("userid"=>session("SESSION_ID")))->getField("bonus_level");
                            if (bccomp($bonus_level,12.8,2)==-1) {
                                if ($touzhuAmount <= $total_liushui) {
                                    $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'消费未达到充值总额的30%！');
                                    session("WITHDRAWAPPKEY",$newAppkey);
                                    echo json_encode($output);
                                    exit();
                                }
                            }

                            //最后一次充值时间 到提款时间 如果未到30分钟 不给予提款
                            $lastCzTime = $res[0]["time"];
                            if ((time() - $lastCzTime) < 1800) {
                                $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'充值后请30分钟后进行提款！');
                                session("WITHDRAWAPPKEY",$newAppkey);
                                echo json_encode($output);
                                exit();
                            }
                            $userInfo = $User->field("acc_password,safe_key")->where(array("id"=>$uid))->find();
                            $safeKey = $userInfo["safe_key"];
                            $oldPasswordMd5 = md5(md5($curpassword . C("PASSWORD_HALT")) . $safeKey);
                            if($oldPasswordMd5!=$userInfo['acc_password'])
                            {
                                $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'资金密码输入错误');
                                session("WITHDRAWAPPKEY",$newAppkey);
                                echo json_encode($output);
                                exit();
                            }
                            else
                            {
                                $HOST = C("MG_HOST");
                                $PORT = C("MG_PORT");
                                $USER = C("MG_USER");
                                $PASS = C("MG_PASS");
                                $VHOST = C("MG_VHOST");

                                //发送前台提款数据
                                $argv = $uid."-".$money."-".$bankVal."-".ip2long(get_client_ip());
                                $exchange = 'e_fronttikuan';
                                $conn = new AMQPConnection($HOST, $PORT, $USER, $PASS, $VHOST);
                                if ($conn) {
                                    $ch = $conn->channel();
                                    $msg_body = $argv;
                                    $msg = new AMQPMessage($msg_body, array('content_type' => 'text/plain', 'delivery_mode' => 2));
                                    $ch->basic_publish($msg, $exchange);
                                    $ch->close();
                                    $conn->close();
                                }
                                $output = array("appkey"=>$newAppkey,'flag'=>true,'msg'=>'提款申请成功，待系统审核');
                                session("WITHDRAWAPPKEY",$newAppkey);


                                // 发送消息到后台
                                // 查询后台管理用户
                                $adminUser = M("user")->where("group_id=1 or group_id=6 or group_id=7 or group_id=8 or group_id=9")->field("id")->select();
                                $msg = session("SESSION_NAME")."申请提款:".$money;
                                $send = $msg."-1-".time();
                                foreach($adminUser as $admin)
                                {
                                    $content = array('type'=>"inbox","to"=>$admin['id'],'content'=>$send);
                                    $result = self::sendWebSocketMsg($content);
                                }

                                // 如果用户绑定了手机，设置过取款短信提醒。那么发送短信提醒
                                $tel = M("user_extend")->where(array("userid"=>session("SESSION_ID")))->getField("tel");
                                if(!empty($tel))
                                {
                                    $withdrawnotice = M("sms")->where(array("userid"=>session("SESSION_ID")))->getField("withdrawnotice");
                                    if($withdrawnotice==1)
                                    {
                                        $this->SendSms($tel,"金手指提醒:".session("SESSION_NAME")."正在申请提款".$money);
                                    }
                                }

                                echo json_encode($output);
                                exit();
                            }
                        }
                    }
                    else
                    {
                        $output = array("appkey"=>$newAppkey,'flag'=>false,'msg'=>'还未到提款时间');
                        session("WITHDRAWAPPKEY",$newAppkey);
                        echo json_encode($output);
                        exit();
                    }
                }
            }
        }
    }

    public static function sendWebSocketMsg($content)
    {
        $push_api_url = "http://".C("TUISONG_HOST").":2121/";
        $post_data = $content;
        $ch = curl_init ();
        curl_setopt ( $ch, CURLOPT_URL, $push_api_url );
        curl_setopt ( $ch, CURLOPT_POST, 1 );
        curl_setopt ( $ch, CURLOPT_HEADER, 0 );
        curl_setopt ( $ch, CURLOPT_RETURNTRANSFER, 1 );
        curl_setopt ( $ch, CURLOPT_POSTFIELDS, $post_data );
        $result = curl_exec ( $ch );
        curl_close ( $ch );
        return $result;
    }
}